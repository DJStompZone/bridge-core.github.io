{"hash":"98e38125786c2845ed840b346bcbe34f6236136f","data":{"markdownPage":{"id":"a58d930f63ea0ed3185aeebb0d5a1ca9","title":"@bridge/sidebar","description":"","path":"/plugin-docs/modules/sidebar/","timeToRead":1,"content":"<h1 id=\"bridgesidebar\"><a href=\"#bridgesidebar\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>@bridge/sidebar</h1>\n<p>Module that allows plugins to create sidebar tabs.</p>\n<h2 id=\"creating-a-sidebar\"><a href=\"#creating-a-sidebar\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Creating a sidebar</h2>\n<p><strong>Function Signature:</strong> <code>create(config: ISidebarConfig): ISidebarInstance</code></p>\n<p>Creates a new sidebar and adds it to the current workspace.</p>\n<h3 id=\"isidebarconfig\"><a href=\"#isidebarconfig\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>ISidebarConfig</h3>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">ISidebarConfig</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// Id of the sidebar (omit to automatically generate it)</span>\n\tid<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n\t<span class=\"token comment\">// Name of the sidebar</span>\n\tdisplayName<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n\t<span class=\"token comment\">// UI component that should be rendered for the sidebar</span>\n\tcomponent<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n\t<span class=\"token comment\">// Icon to display within the sidebar navigation</span>\n\ticon<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h3 id=\"isidebarinstance\"><a href=\"#isidebarinstance\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>ISidebarInstance</h3>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">ISidebarInstance</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ISidebarConfig</span><span class=\"token punctuation\">,</span> IDisposable <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// Id of the sidebar</span>\n\t<span class=\"token keyword\">readonly</span> uuid<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n\t<span class=\"token comment\">// Whether the sidebar is selected</span>\n\t<span class=\"token keyword\">readonly</span> isSelected<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span>\n\t<span class=\"token comment\">// Icon opacity</span>\n\t<span class=\"token keyword\">readonly</span> opacity<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n\n\t<span class=\"token comment\">// Select &amp; show this sidebar</span>\n\t<span class=\"token function-variable function\">select</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> ISidebarInstance\n\t<span class=\"token comment\">// Toggle sidebar visibility</span>\n\t<span class=\"token function-variable function\">toggle</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"getting-the-currently-selected-sidebar\"><a href=\"#getting-the-currently-selected-sidebar\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Getting the currently selected sidebar</h2>\n<p><strong>Function Signature:</strong> <code>getSelected(): ISidebarInstance</code></p>\n<p>Returns the currently selected sidebar instance.</p>\n<h2 id=\"selecting-a-sidebar\"><a href=\"#selecting-a-sidebar\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Selecting a sidebar</h2>\n<p><strong>Function Signature:</strong> <code>select(id: string): void</code></p>\n<p>Select the sidebar with the provided id.</p>\n<h3 id=\"alternative\"><a href=\"#alternative\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Alternative</h3>\n<p>Given that you have access to the <code>ISidebarInstance</code> that you want to select, you can also call <code>select()</code> on it.</p>\n<h4 id=\"example\"><a href=\"#example\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Example</h4>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> create <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@bridge/sidebar'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> sidebar <span class=\"token operator\">=</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n\nsidebar<span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n<h2 id=\"listening-to-changes\"><a href=\"#listening-to-changes\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Listening to changes</h2>\n<p><strong>Function Signature:</strong> <code>onChange(cb: (prev: ISidebarInstance, curr: ISidebarInstance) => void)</code></p>\n<p>Registers a handler that fires whenever the currently selected sidebar changes.</p>\n<h2 id=\"removing-a-sidebar\"><a href=\"#removing-a-sidebar\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Removing a sidebar</h2>\n<p>In order to remove a sidebar, you need to have a reference to the <code>ISidebarInstance</code>. Calling <code>dispose()</code> on it will remove the sidebar from the app.</p>\n<h3 id=\"example-1\"><a href=\"#example-1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Example</h3>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> create <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@bridge/sidebar'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> sidebar <span class=\"token operator\">=</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Later...</span>\nsidebar<span class=\"token punctuation\">.</span><span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n","sidebar":"plugins","next":"","prev":"","author":null,"headings":[{"depth":1,"value":"@bridge/sidebar","anchor":"#bridgesidebar"},{"depth":2,"value":"Creating a sidebar","anchor":"#creating-a-sidebar"},{"depth":3,"value":"ISidebarConfig","anchor":"#isidebarconfig"},{"depth":3,"value":"ISidebarInstance","anchor":"#isidebarinstance"},{"depth":2,"value":"Getting the currently selected sidebar","anchor":"#getting-the-currently-selected-sidebar"},{"depth":2,"value":"Selecting a sidebar","anchor":"#selecting-a-sidebar"},{"depth":3,"value":"Alternative","anchor":"#alternative"},{"depth":4,"value":"Example","anchor":"#example"},{"depth":2,"value":"Listening to changes","anchor":"#listening-to-changes"},{"depth":2,"value":"Removing a sidebar","anchor":"#removing-a-sidebar"},{"depth":3,"value":"Example","anchor":"#example-1"}],"fileInfo":{"path":"plugin-docs/modules/sidebar.md"}},"allMarkdownPage":{"edges":[{"node":{"path":"/plugin-docs/other/styles/","title":"Styles"}},{"node":{"path":"/plugin-docs/other/default-file-types/","title":"Default File Types"}},{"node":{"path":"/plugin-docs/other/common-types/","title":"Common Types"}},{"node":{"path":"/plugin-docs/modules/windows/","title":"@bridge/windows"}},{"node":{"path":"/plugin-docs/modules/utils/","title":"@bridge/utils"}},{"node":{"path":"/plugin-docs/modules/ui/","title":"@bridge/ui"}},{"node":{"path":"/plugin-docs/modules/toolbar/","title":"@bridge/toolbar"}},{"node":{"path":"/plugin-docs/modules/sidebar/","title":"@bridge/sidebar"}},{"node":{"path":"/plugin-docs/modules/path/","title":"@bridge/path"}},{"node":{"path":"/plugin-docs/modules/","title":"Plugin Modules"}},{"node":{"path":"/plugin-docs/modules/globals/","title":"@bridge/globals"}},{"node":{"path":"/plugin-docs/modules/fs/","title":"@bridge/fs"}},{"node":{"path":"/plugin-docs/modules/footer/","title":"@bridge/notification"}},{"node":{"path":"/plugin-docs/modules/file-importer/","title":"@bridge/file-importer"}},{"node":{"path":"/plugin-docs/modules/fetch-definition/","title":"@bridge/fetch-definition"}},{"node":{"path":"/plugin-docs/modules/env/","title":"@bridge/env"}},{"node":{"path":"/plugin-docs/modules/compare-versions/","title":"@bridge/compare-versions"}},{"node":{"path":"/plugin-docs/json/file-definitions/","title":"File Definitions"}},{"node":{"path":"/plugin-docs/json/themes/","title":"Themes"}},{"node":{"path":"/plugin-docs/json/snippets/","title":"Snippets"}},{"node":{"path":"/plugin-docs/json/presetsv2/","title":"Presets v2"}},{"node":{"path":"/plugin-docs/json/presets/","title":"Presets"}},{"node":{"path":"/plugin-docs/json/lightning-cache/","title":"Lightning Cache"}},{"node":{"path":"/plugin-docs/auto-completions/","title":"Auto-Completions"}},{"node":{"path":"/plugin-docs/auto-completions/dynamic-references/","title":"Dynamic References"}},{"node":{"path":"/editor-docs/other/molang/","title":"MoLang"}},{"node":{"path":"/editor-docs/getting-started/","title":"Getting Started"}},{"node":{"path":"/editor-docs/faq/","title":"FAQ"}},{"node":{"path":"/plugin-docs/custom-components/","title":"Custom Components"}},{"node":{"path":"/plugin-docs/","title":"Plugin API"}},{"node":{"path":"/plugin-docs/custom-commands/","title":"Custom Commands"}},{"node":{"path":"/plugin-docs/contributing/","title":"Contributing Plugins"}},{"node":{"path":"/editor-docs/no-cache/","title":"No Cache File"}},{"node":{"path":"/editor-docs/","title":"Editor"}},{"node":{"path":"/editor-docs/features/","title":"Feature Overview"}}]}},"context":{}}